//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BLL.NewWebServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WB_TowerSoap", Namespace="http://tempuri.org/")]
    public partial class WB_Tower : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback LoadAllBillgSearchOnClickButtonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxBillIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadofficeDetailsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadOfficesForBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfficeByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicationCheckOfficeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxOfficeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadfloorByBuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllBuildingforOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllBuildingComboOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBuildingfromOfficesEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadfloorByOfficeIDinEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllFloorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllFloorComboOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFloorByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBuildingIDByFloorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicationCheckFloorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIDFloorOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFloorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFloorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBuildingByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCityByBuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicationCheckBuildingNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIDBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityByCityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicationCheckCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIDCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMenuByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRightsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicationStudentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentByStudentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStudentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WB_Tower() {
            this.Url = global::BLL.Properties.Settings.Default.BLL_NewWebServices_WB_Tower;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoadAllBillgSearchOnClickButtonCompletedEventHandler LoadAllBillgSearchOnClickButtonCompleted;
        
        /// <remarks/>
        public event GetBillingByIDCompletedEventHandler GetBillingByIDCompleted;
        
        /// <remarks/>
        public event GetMaxBillIDCompletedEventHandler GetMaxBillIDCompleted;
        
        /// <remarks/>
        public event LoadofficeDetailsByIDCompletedEventHandler LoadofficeDetailsByIDCompleted;
        
        /// <remarks/>
        public event LoadOfficesForBillingCompletedEventHandler LoadOfficesForBillingCompleted;
        
        /// <remarks/>
        public event AddBillingCompletedEventHandler AddBillingCompleted;
        
        /// <remarks/>
        public event UpdateBillingCompletedEventHandler UpdateBillingCompleted;
        
        /// <remarks/>
        public event LoadAllOfficeCompletedEventHandler LoadAllOfficeCompleted;
        
        /// <remarks/>
        public event GetOfficeByIDCompletedEventHandler GetOfficeByIDCompleted;
        
        /// <remarks/>
        public event DuplicationCheckOfficeNameCompletedEventHandler DuplicationCheckOfficeNameCompleted;
        
        /// <remarks/>
        public event GetMaxOfficeIDCompletedEventHandler GetMaxOfficeIDCompleted;
        
        /// <remarks/>
        public event AddOfficeCompletedEventHandler AddOfficeCompleted;
        
        /// <remarks/>
        public event UpdateOfficeCompletedEventHandler UpdateOfficeCompleted;
        
        /// <remarks/>
        public event LoadfloorByBuildingIDCompletedEventHandler LoadfloorByBuildingIDCompleted;
        
        /// <remarks/>
        public event LoadAllBuildingforOfficeCompletedEventHandler LoadAllBuildingforOfficeCompleted;
        
        /// <remarks/>
        public event LoadAllBuildingComboCompletedEventHandler LoadAllBuildingComboCompleted;
        
        /// <remarks/>
        public event LoadBuildingfromOfficesEditCompletedEventHandler LoadBuildingfromOfficesEditCompleted;
        
        /// <remarks/>
        public event LoadfloorByOfficeIDinEditCompletedEventHandler LoadfloorByOfficeIDinEditCompleted;
        
        /// <remarks/>
        public event LoadAllFloorCompletedEventHandler LoadAllFloorCompleted;
        
        /// <remarks/>
        public event LoadAllFloorComboCompletedEventHandler LoadAllFloorComboCompleted;
        
        /// <remarks/>
        public event GetFloorByIDCompletedEventHandler GetFloorByIDCompleted;
        
        /// <remarks/>
        public event LoadBuildingIDByFloorIDCompletedEventHandler LoadBuildingIDByFloorIDCompleted;
        
        /// <remarks/>
        public event DuplicationCheckFloorNameCompletedEventHandler DuplicationCheckFloorNameCompleted;
        
        /// <remarks/>
        public event GetMaxIDFloorCompletedEventHandler GetMaxIDFloorCompleted;
        
        /// <remarks/>
        public event AddFloorCompletedEventHandler AddFloorCompleted;
        
        /// <remarks/>
        public event UpdateFloorCompletedEventHandler UpdateFloorCompleted;
        
        /// <remarks/>
        public event LoadAllBuildingCompletedEventHandler LoadAllBuildingCompleted;
        
        /// <remarks/>
        public event GetBuildingByIDCompletedEventHandler GetBuildingByIDCompleted;
        
        /// <remarks/>
        public event LoadCityByBuildingIDCompletedEventHandler LoadCityByBuildingIDCompleted;
        
        /// <remarks/>
        public event DuplicationCheckBuildingNameCompletedEventHandler DuplicationCheckBuildingNameCompleted;
        
        /// <remarks/>
        public event AddBuildingCompletedEventHandler AddBuildingCompleted;
        
        /// <remarks/>
        public event UpdateBuildingCompletedEventHandler UpdateBuildingCompleted;
        
        /// <remarks/>
        public event GetMaxIDBuildingCompletedEventHandler GetMaxIDBuildingCompleted;
        
        /// <remarks/>
        public event LoadAllCityCompletedEventHandler LoadAllCityCompleted;
        
        /// <remarks/>
        public event GetCityByCityIDCompletedEventHandler GetCityByCityIDCompleted;
        
        /// <remarks/>
        public event DuplicationCheckCityCompletedEventHandler DuplicationCheckCityCompleted;
        
        /// <remarks/>
        public event AddCityCompletedEventHandler AddCityCompleted;
        
        /// <remarks/>
        public event UpdateCityCompletedEventHandler UpdateCityCompleted;
        
        /// <remarks/>
        public event GetMaxIDCityCompletedEventHandler GetMaxIDCityCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event LoginAuthCompletedEventHandler LoginAuthCompleted;
        
        /// <remarks/>
        public event LoadUserRightsCompletedEventHandler LoadUserRightsCompleted;
        
        /// <remarks/>
        public event GetUserMenuByUserIDCompletedEventHandler GetUserMenuByUserIDCompleted;
        
        /// <remarks/>
        public event ValidatePasswordCompletedEventHandler ValidatePasswordCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetUserDetailCompletedEventHandler GetUserDetailCompleted;
        
        /// <remarks/>
        public event GetUserRightsDetailsCompletedEventHandler GetUserRightsDetailsCompleted;
        
        /// <remarks/>
        public event LoadAllUsersCompletedEventHandler LoadAllUsersCompleted;
        
        /// <remarks/>
        public event GetFormNameCompletedEventHandler GetFormNameCompleted;
        
        /// <remarks/>
        public event DuplicateUserCompletedEventHandler DuplicateUserCompleted;
        
        /// <remarks/>
        public event AddUserRightsCompletedEventHandler AddUserRightsCompleted;
        
        /// <remarks/>
        public event GetMaxUserIDCompletedEventHandler GetMaxUserIDCompleted;
        
        /// <remarks/>
        public event UpdateUserRightsCompletedEventHandler UpdateUserRightsCompleted;
        
        /// <remarks/>
        public event LoadAllStudentsCompletedEventHandler LoadAllStudentsCompleted;
        
        /// <remarks/>
        public event DuplicationStudentRecordCompletedEventHandler DuplicationStudentRecordCompleted;
        
        /// <remarks/>
        public event GetStudentByStudentIDCompletedEventHandler GetStudentByStudentIDCompleted;
        
        /// <remarks/>
        public event AddStudentCompletedEventHandler AddStudentCompleted;
        
        /// <remarks/>
        public event UpdateStudentCompletedEventHandler UpdateStudentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllBillgSearchOnClickButton", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllBillgSearchOnClickButton() {
            object[] results = this.Invoke("LoadAllBillgSearchOnClickButton", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllBillgSearchOnClickButtonAsync() {
            this.LoadAllBillgSearchOnClickButtonAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllBillgSearchOnClickButtonAsync(object userState) {
            if ((this.LoadAllBillgSearchOnClickButtonOperationCompleted == null)) {
                this.LoadAllBillgSearchOnClickButtonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllBillgSearchOnClickButtonOperationCompleted);
            }
            this.InvokeAsync("LoadAllBillgSearchOnClickButton", new object[0], this.LoadAllBillgSearchOnClickButtonOperationCompleted, userState);
        }
        
        private void OnLoadAllBillgSearchOnClickButtonOperationCompleted(object arg) {
            if ((this.LoadAllBillgSearchOnClickButtonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllBillgSearchOnClickButtonCompleted(this, new LoadAllBillgSearchOnClickButtonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillingByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBillingByID(int BillingID) {
            object[] results = this.Invoke("GetBillingByID", new object[] {
                        BillingID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingByIDAsync(int BillingID) {
            this.GetBillingByIDAsync(BillingID, null);
        }
        
        /// <remarks/>
        public void GetBillingByIDAsync(int BillingID, object userState) {
            if ((this.GetBillingByIDOperationCompleted == null)) {
                this.GetBillingByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingByIDOperationCompleted);
            }
            this.InvokeAsync("GetBillingByID", new object[] {
                        BillingID}, this.GetBillingByIDOperationCompleted, userState);
        }
        
        private void OnGetBillingByIDOperationCompleted(object arg) {
            if ((this.GetBillingByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingByIDCompleted(this, new GetBillingByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxBillID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxBillID() {
            object[] results = this.Invoke("GetMaxBillID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxBillIDAsync() {
            this.GetMaxBillIDAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxBillIDAsync(object userState) {
            if ((this.GetMaxBillIDOperationCompleted == null)) {
                this.GetMaxBillIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxBillIDOperationCompleted);
            }
            this.InvokeAsync("GetMaxBillID", new object[0], this.GetMaxBillIDOperationCompleted, userState);
        }
        
        private void OnGetMaxBillIDOperationCompleted(object arg) {
            if ((this.GetMaxBillIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxBillIDCompleted(this, new GetMaxBillIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadofficeDetailsByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadofficeDetailsByID(int OfficeID) {
            object[] results = this.Invoke("LoadofficeDetailsByID", new object[] {
                        OfficeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadofficeDetailsByIDAsync(int OfficeID) {
            this.LoadofficeDetailsByIDAsync(OfficeID, null);
        }
        
        /// <remarks/>
        public void LoadofficeDetailsByIDAsync(int OfficeID, object userState) {
            if ((this.LoadofficeDetailsByIDOperationCompleted == null)) {
                this.LoadofficeDetailsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadofficeDetailsByIDOperationCompleted);
            }
            this.InvokeAsync("LoadofficeDetailsByID", new object[] {
                        OfficeID}, this.LoadofficeDetailsByIDOperationCompleted, userState);
        }
        
        private void OnLoadofficeDetailsByIDOperationCompleted(object arg) {
            if ((this.LoadofficeDetailsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadofficeDetailsByIDCompleted(this, new LoadofficeDetailsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadOfficesForBilling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadOfficesForBilling() {
            object[] results = this.Invoke("LoadOfficesForBilling", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadOfficesForBillingAsync() {
            this.LoadOfficesForBillingAsync(null);
        }
        
        /// <remarks/>
        public void LoadOfficesForBillingAsync(object userState) {
            if ((this.LoadOfficesForBillingOperationCompleted == null)) {
                this.LoadOfficesForBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadOfficesForBillingOperationCompleted);
            }
            this.InvokeAsync("LoadOfficesForBilling", new object[0], this.LoadOfficesForBillingOperationCompleted, userState);
        }
        
        private void OnLoadOfficesForBillingOperationCompleted(object arg) {
            if ((this.LoadOfficesForBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadOfficesForBillingCompleted(this, new LoadOfficesForBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBilling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddBilling(BE_Billing NewBEObj) {
            object[] results = this.Invoke("AddBilling", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddBillingAsync(BE_Billing NewBEObj) {
            this.AddBillingAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddBillingAsync(BE_Billing NewBEObj, object userState) {
            if ((this.AddBillingOperationCompleted == null)) {
                this.AddBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBillingOperationCompleted);
            }
            this.InvokeAsync("AddBilling", new object[] {
                        NewBEObj}, this.AddBillingOperationCompleted, userState);
        }
        
        private void OnAddBillingOperationCompleted(object arg) {
            if ((this.AddBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBillingCompleted(this, new AddBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBilling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateBilling(BE_Billing NewBEObj) {
            object[] results = this.Invoke("UpdateBilling", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBillingAsync(BE_Billing NewBEObj) {
            this.UpdateBillingAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateBillingAsync(BE_Billing NewBEObj, object userState) {
            if ((this.UpdateBillingOperationCompleted == null)) {
                this.UpdateBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBillingOperationCompleted);
            }
            this.InvokeAsync("UpdateBilling", new object[] {
                        NewBEObj}, this.UpdateBillingOperationCompleted, userState);
        }
        
        private void OnUpdateBillingOperationCompleted(object arg) {
            if ((this.UpdateBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBillingCompleted(this, new UpdateBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllOffice() {
            object[] results = this.Invoke("LoadAllOffice", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllOfficeAsync() {
            this.LoadAllOfficeAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllOfficeAsync(object userState) {
            if ((this.LoadAllOfficeOperationCompleted == null)) {
                this.LoadAllOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllOfficeOperationCompleted);
            }
            this.InvokeAsync("LoadAllOffice", new object[0], this.LoadAllOfficeOperationCompleted, userState);
        }
        
        private void OnLoadAllOfficeOperationCompleted(object arg) {
            if ((this.LoadAllOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllOfficeCompleted(this, new LoadAllOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOfficeByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOfficeByID(int OfficeID) {
            object[] results = this.Invoke("GetOfficeByID", new object[] {
                        OfficeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfficeByIDAsync(int OfficeID) {
            this.GetOfficeByIDAsync(OfficeID, null);
        }
        
        /// <remarks/>
        public void GetOfficeByIDAsync(int OfficeID, object userState) {
            if ((this.GetOfficeByIDOperationCompleted == null)) {
                this.GetOfficeByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfficeByIDOperationCompleted);
            }
            this.InvokeAsync("GetOfficeByID", new object[] {
                        OfficeID}, this.GetOfficeByIDOperationCompleted, userState);
        }
        
        private void OnGetOfficeByIDOperationCompleted(object arg) {
            if ((this.GetOfficeByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfficeByIDCompleted(this, new GetOfficeByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicationCheckOfficeName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicationCheckOfficeName(string FloorName) {
            object[] results = this.Invoke("DuplicationCheckOfficeName", new object[] {
                        FloorName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicationCheckOfficeNameAsync(string FloorName) {
            this.DuplicationCheckOfficeNameAsync(FloorName, null);
        }
        
        /// <remarks/>
        public void DuplicationCheckOfficeNameAsync(string FloorName, object userState) {
            if ((this.DuplicationCheckOfficeNameOperationCompleted == null)) {
                this.DuplicationCheckOfficeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicationCheckOfficeNameOperationCompleted);
            }
            this.InvokeAsync("DuplicationCheckOfficeName", new object[] {
                        FloorName}, this.DuplicationCheckOfficeNameOperationCompleted, userState);
        }
        
        private void OnDuplicationCheckOfficeNameOperationCompleted(object arg) {
            if ((this.DuplicationCheckOfficeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicationCheckOfficeNameCompleted(this, new DuplicationCheckOfficeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxOfficeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxOfficeID() {
            object[] results = this.Invoke("GetMaxOfficeID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxOfficeIDAsync() {
            this.GetMaxOfficeIDAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxOfficeIDAsync(object userState) {
            if ((this.GetMaxOfficeIDOperationCompleted == null)) {
                this.GetMaxOfficeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxOfficeIDOperationCompleted);
            }
            this.InvokeAsync("GetMaxOfficeID", new object[0], this.GetMaxOfficeIDOperationCompleted, userState);
        }
        
        private void OnGetMaxOfficeIDOperationCompleted(object arg) {
            if ((this.GetMaxOfficeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxOfficeIDCompleted(this, new GetMaxOfficeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOffice(BE_Office NewBEObj) {
            object[] results = this.Invoke("AddOffice", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOfficeAsync(BE_Office NewBEObj) {
            this.AddOfficeAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddOfficeAsync(BE_Office NewBEObj, object userState) {
            if ((this.AddOfficeOperationCompleted == null)) {
                this.AddOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOfficeOperationCompleted);
            }
            this.InvokeAsync("AddOffice", new object[] {
                        NewBEObj}, this.AddOfficeOperationCompleted, userState);
        }
        
        private void OnAddOfficeOperationCompleted(object arg) {
            if ((this.AddOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOfficeCompleted(this, new AddOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOffice(BE_Office NewBEObj) {
            object[] results = this.Invoke("UpdateOffice", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOfficeAsync(BE_Office NewBEObj) {
            this.UpdateOfficeAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateOfficeAsync(BE_Office NewBEObj, object userState) {
            if ((this.UpdateOfficeOperationCompleted == null)) {
                this.UpdateOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOfficeOperationCompleted);
            }
            this.InvokeAsync("UpdateOffice", new object[] {
                        NewBEObj}, this.UpdateOfficeOperationCompleted, userState);
        }
        
        private void OnUpdateOfficeOperationCompleted(object arg) {
            if ((this.UpdateOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOfficeCompleted(this, new UpdateOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadfloorByBuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadfloorByBuildingID(int BuildingID) {
            object[] results = this.Invoke("LoadfloorByBuildingID", new object[] {
                        BuildingID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadfloorByBuildingIDAsync(int BuildingID) {
            this.LoadfloorByBuildingIDAsync(BuildingID, null);
        }
        
        /// <remarks/>
        public void LoadfloorByBuildingIDAsync(int BuildingID, object userState) {
            if ((this.LoadfloorByBuildingIDOperationCompleted == null)) {
                this.LoadfloorByBuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadfloorByBuildingIDOperationCompleted);
            }
            this.InvokeAsync("LoadfloorByBuildingID", new object[] {
                        BuildingID}, this.LoadfloorByBuildingIDOperationCompleted, userState);
        }
        
        private void OnLoadfloorByBuildingIDOperationCompleted(object arg) {
            if ((this.LoadfloorByBuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadfloorByBuildingIDCompleted(this, new LoadfloorByBuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllBuildingforOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllBuildingforOffice() {
            object[] results = this.Invoke("LoadAllBuildingforOffice", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllBuildingforOfficeAsync() {
            this.LoadAllBuildingforOfficeAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllBuildingforOfficeAsync(object userState) {
            if ((this.LoadAllBuildingforOfficeOperationCompleted == null)) {
                this.LoadAllBuildingforOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllBuildingforOfficeOperationCompleted);
            }
            this.InvokeAsync("LoadAllBuildingforOffice", new object[0], this.LoadAllBuildingforOfficeOperationCompleted, userState);
        }
        
        private void OnLoadAllBuildingforOfficeOperationCompleted(object arg) {
            if ((this.LoadAllBuildingforOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllBuildingforOfficeCompleted(this, new LoadAllBuildingforOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllBuildingCombo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllBuildingCombo() {
            object[] results = this.Invoke("LoadAllBuildingCombo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllBuildingComboAsync() {
            this.LoadAllBuildingComboAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllBuildingComboAsync(object userState) {
            if ((this.LoadAllBuildingComboOperationCompleted == null)) {
                this.LoadAllBuildingComboOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllBuildingComboOperationCompleted);
            }
            this.InvokeAsync("LoadAllBuildingCombo", new object[0], this.LoadAllBuildingComboOperationCompleted, userState);
        }
        
        private void OnLoadAllBuildingComboOperationCompleted(object arg) {
            if ((this.LoadAllBuildingComboCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllBuildingComboCompleted(this, new LoadAllBuildingComboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadBuildingfromOfficesEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadBuildingfromOfficesEdit(int OfficeID) {
            object[] results = this.Invoke("LoadBuildingfromOfficesEdit", new object[] {
                        OfficeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBuildingfromOfficesEditAsync(int OfficeID) {
            this.LoadBuildingfromOfficesEditAsync(OfficeID, null);
        }
        
        /// <remarks/>
        public void LoadBuildingfromOfficesEditAsync(int OfficeID, object userState) {
            if ((this.LoadBuildingfromOfficesEditOperationCompleted == null)) {
                this.LoadBuildingfromOfficesEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBuildingfromOfficesEditOperationCompleted);
            }
            this.InvokeAsync("LoadBuildingfromOfficesEdit", new object[] {
                        OfficeID}, this.LoadBuildingfromOfficesEditOperationCompleted, userState);
        }
        
        private void OnLoadBuildingfromOfficesEditOperationCompleted(object arg) {
            if ((this.LoadBuildingfromOfficesEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBuildingfromOfficesEditCompleted(this, new LoadBuildingfromOfficesEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadfloorByOfficeIDinEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadfloorByOfficeIDinEdit(int OfficeID) {
            object[] results = this.Invoke("LoadfloorByOfficeIDinEdit", new object[] {
                        OfficeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadfloorByOfficeIDinEditAsync(int OfficeID) {
            this.LoadfloorByOfficeIDinEditAsync(OfficeID, null);
        }
        
        /// <remarks/>
        public void LoadfloorByOfficeIDinEditAsync(int OfficeID, object userState) {
            if ((this.LoadfloorByOfficeIDinEditOperationCompleted == null)) {
                this.LoadfloorByOfficeIDinEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadfloorByOfficeIDinEditOperationCompleted);
            }
            this.InvokeAsync("LoadfloorByOfficeIDinEdit", new object[] {
                        OfficeID}, this.LoadfloorByOfficeIDinEditOperationCompleted, userState);
        }
        
        private void OnLoadfloorByOfficeIDinEditOperationCompleted(object arg) {
            if ((this.LoadfloorByOfficeIDinEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadfloorByOfficeIDinEditCompleted(this, new LoadfloorByOfficeIDinEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllFloor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllFloor() {
            object[] results = this.Invoke("LoadAllFloor", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllFloorAsync() {
            this.LoadAllFloorAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllFloorAsync(object userState) {
            if ((this.LoadAllFloorOperationCompleted == null)) {
                this.LoadAllFloorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllFloorOperationCompleted);
            }
            this.InvokeAsync("LoadAllFloor", new object[0], this.LoadAllFloorOperationCompleted, userState);
        }
        
        private void OnLoadAllFloorOperationCompleted(object arg) {
            if ((this.LoadAllFloorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllFloorCompleted(this, new LoadAllFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllFloorCombo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllFloorCombo() {
            object[] results = this.Invoke("LoadAllFloorCombo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllFloorComboAsync() {
            this.LoadAllFloorComboAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllFloorComboAsync(object userState) {
            if ((this.LoadAllFloorComboOperationCompleted == null)) {
                this.LoadAllFloorComboOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllFloorComboOperationCompleted);
            }
            this.InvokeAsync("LoadAllFloorCombo", new object[0], this.LoadAllFloorComboOperationCompleted, userState);
        }
        
        private void OnLoadAllFloorComboOperationCompleted(object arg) {
            if ((this.LoadAllFloorComboCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllFloorComboCompleted(this, new LoadAllFloorComboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFloorByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFloorByID(int FloorID) {
            object[] results = this.Invoke("GetFloorByID", new object[] {
                        FloorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFloorByIDAsync(int FloorID) {
            this.GetFloorByIDAsync(FloorID, null);
        }
        
        /// <remarks/>
        public void GetFloorByIDAsync(int FloorID, object userState) {
            if ((this.GetFloorByIDOperationCompleted == null)) {
                this.GetFloorByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFloorByIDOperationCompleted);
            }
            this.InvokeAsync("GetFloorByID", new object[] {
                        FloorID}, this.GetFloorByIDOperationCompleted, userState);
        }
        
        private void OnGetFloorByIDOperationCompleted(object arg) {
            if ((this.GetFloorByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFloorByIDCompleted(this, new GetFloorByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadBuildingIDByFloorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadBuildingIDByFloorID(int FloorID) {
            object[] results = this.Invoke("LoadBuildingIDByFloorID", new object[] {
                        FloorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBuildingIDByFloorIDAsync(int FloorID) {
            this.LoadBuildingIDByFloorIDAsync(FloorID, null);
        }
        
        /// <remarks/>
        public void LoadBuildingIDByFloorIDAsync(int FloorID, object userState) {
            if ((this.LoadBuildingIDByFloorIDOperationCompleted == null)) {
                this.LoadBuildingIDByFloorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBuildingIDByFloorIDOperationCompleted);
            }
            this.InvokeAsync("LoadBuildingIDByFloorID", new object[] {
                        FloorID}, this.LoadBuildingIDByFloorIDOperationCompleted, userState);
        }
        
        private void OnLoadBuildingIDByFloorIDOperationCompleted(object arg) {
            if ((this.LoadBuildingIDByFloorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBuildingIDByFloorIDCompleted(this, new LoadBuildingIDByFloorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicationCheckFloorName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicationCheckFloorName(string FloorName) {
            object[] results = this.Invoke("DuplicationCheckFloorName", new object[] {
                        FloorName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicationCheckFloorNameAsync(string FloorName) {
            this.DuplicationCheckFloorNameAsync(FloorName, null);
        }
        
        /// <remarks/>
        public void DuplicationCheckFloorNameAsync(string FloorName, object userState) {
            if ((this.DuplicationCheckFloorNameOperationCompleted == null)) {
                this.DuplicationCheckFloorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicationCheckFloorNameOperationCompleted);
            }
            this.InvokeAsync("DuplicationCheckFloorName", new object[] {
                        FloorName}, this.DuplicationCheckFloorNameOperationCompleted, userState);
        }
        
        private void OnDuplicationCheckFloorNameOperationCompleted(object arg) {
            if ((this.DuplicationCheckFloorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicationCheckFloorNameCompleted(this, new DuplicationCheckFloorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxIDFloor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxIDFloor() {
            object[] results = this.Invoke("GetMaxIDFloor", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIDFloorAsync() {
            this.GetMaxIDFloorAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxIDFloorAsync(object userState) {
            if ((this.GetMaxIDFloorOperationCompleted == null)) {
                this.GetMaxIDFloorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIDFloorOperationCompleted);
            }
            this.InvokeAsync("GetMaxIDFloor", new object[0], this.GetMaxIDFloorOperationCompleted, userState);
        }
        
        private void OnGetMaxIDFloorOperationCompleted(object arg) {
            if ((this.GetMaxIDFloorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIDFloorCompleted(this, new GetMaxIDFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFloor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFloor(BE_Floor NewBEObj) {
            object[] results = this.Invoke("AddFloor", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFloorAsync(BE_Floor NewBEObj) {
            this.AddFloorAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddFloorAsync(BE_Floor NewBEObj, object userState) {
            if ((this.AddFloorOperationCompleted == null)) {
                this.AddFloorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFloorOperationCompleted);
            }
            this.InvokeAsync("AddFloor", new object[] {
                        NewBEObj}, this.AddFloorOperationCompleted, userState);
        }
        
        private void OnAddFloorOperationCompleted(object arg) {
            if ((this.AddFloorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFloorCompleted(this, new AddFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFloor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFloor(BE_Floor NewBEObj) {
            object[] results = this.Invoke("UpdateFloor", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFloorAsync(BE_Floor NewBEObj) {
            this.UpdateFloorAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateFloorAsync(BE_Floor NewBEObj, object userState) {
            if ((this.UpdateFloorOperationCompleted == null)) {
                this.UpdateFloorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFloorOperationCompleted);
            }
            this.InvokeAsync("UpdateFloor", new object[] {
                        NewBEObj}, this.UpdateFloorOperationCompleted, userState);
        }
        
        private void OnUpdateFloorOperationCompleted(object arg) {
            if ((this.UpdateFloorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFloorCompleted(this, new UpdateFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllBuilding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllBuilding() {
            object[] results = this.Invoke("LoadAllBuilding", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllBuildingAsync() {
            this.LoadAllBuildingAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllBuildingAsync(object userState) {
            if ((this.LoadAllBuildingOperationCompleted == null)) {
                this.LoadAllBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllBuildingOperationCompleted);
            }
            this.InvokeAsync("LoadAllBuilding", new object[0], this.LoadAllBuildingOperationCompleted, userState);
        }
        
        private void OnLoadAllBuildingOperationCompleted(object arg) {
            if ((this.LoadAllBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllBuildingCompleted(this, new LoadAllBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBuildingByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBuildingByID(int BuildingID) {
            object[] results = this.Invoke("GetBuildingByID", new object[] {
                        BuildingID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBuildingByIDAsync(int BuildingID) {
            this.GetBuildingByIDAsync(BuildingID, null);
        }
        
        /// <remarks/>
        public void GetBuildingByIDAsync(int BuildingID, object userState) {
            if ((this.GetBuildingByIDOperationCompleted == null)) {
                this.GetBuildingByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBuildingByIDOperationCompleted);
            }
            this.InvokeAsync("GetBuildingByID", new object[] {
                        BuildingID}, this.GetBuildingByIDOperationCompleted, userState);
        }
        
        private void OnGetBuildingByIDOperationCompleted(object arg) {
            if ((this.GetBuildingByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBuildingByIDCompleted(this, new GetBuildingByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadCityByBuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadCityByBuildingID(int BuildingID) {
            object[] results = this.Invoke("LoadCityByBuildingID", new object[] {
                        BuildingID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCityByBuildingIDAsync(int BuildingID) {
            this.LoadCityByBuildingIDAsync(BuildingID, null);
        }
        
        /// <remarks/>
        public void LoadCityByBuildingIDAsync(int BuildingID, object userState) {
            if ((this.LoadCityByBuildingIDOperationCompleted == null)) {
                this.LoadCityByBuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCityByBuildingIDOperationCompleted);
            }
            this.InvokeAsync("LoadCityByBuildingID", new object[] {
                        BuildingID}, this.LoadCityByBuildingIDOperationCompleted, userState);
        }
        
        private void OnLoadCityByBuildingIDOperationCompleted(object arg) {
            if ((this.LoadCityByBuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCityByBuildingIDCompleted(this, new LoadCityByBuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicationCheckBuildingName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicationCheckBuildingName(string BuildingName) {
            object[] results = this.Invoke("DuplicationCheckBuildingName", new object[] {
                        BuildingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicationCheckBuildingNameAsync(string BuildingName) {
            this.DuplicationCheckBuildingNameAsync(BuildingName, null);
        }
        
        /// <remarks/>
        public void DuplicationCheckBuildingNameAsync(string BuildingName, object userState) {
            if ((this.DuplicationCheckBuildingNameOperationCompleted == null)) {
                this.DuplicationCheckBuildingNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicationCheckBuildingNameOperationCompleted);
            }
            this.InvokeAsync("DuplicationCheckBuildingName", new object[] {
                        BuildingName}, this.DuplicationCheckBuildingNameOperationCompleted, userState);
        }
        
        private void OnDuplicationCheckBuildingNameOperationCompleted(object arg) {
            if ((this.DuplicationCheckBuildingNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicationCheckBuildingNameCompleted(this, new DuplicationCheckBuildingNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBuilding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddBuilding(BE_Building NewBEObj) {
            object[] results = this.Invoke("AddBuilding", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddBuildingAsync(BE_Building NewBEObj) {
            this.AddBuildingAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddBuildingAsync(BE_Building NewBEObj, object userState) {
            if ((this.AddBuildingOperationCompleted == null)) {
                this.AddBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBuildingOperationCompleted);
            }
            this.InvokeAsync("AddBuilding", new object[] {
                        NewBEObj}, this.AddBuildingOperationCompleted, userState);
        }
        
        private void OnAddBuildingOperationCompleted(object arg) {
            if ((this.AddBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBuildingCompleted(this, new AddBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBuilding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateBuilding(BE_Building NewBEObj) {
            object[] results = this.Invoke("UpdateBuilding", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBuildingAsync(BE_Building NewBEObj) {
            this.UpdateBuildingAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateBuildingAsync(BE_Building NewBEObj, object userState) {
            if ((this.UpdateBuildingOperationCompleted == null)) {
                this.UpdateBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBuildingOperationCompleted);
            }
            this.InvokeAsync("UpdateBuilding", new object[] {
                        NewBEObj}, this.UpdateBuildingOperationCompleted, userState);
        }
        
        private void OnUpdateBuildingOperationCompleted(object arg) {
            if ((this.UpdateBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBuildingCompleted(this, new UpdateBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxIDBuilding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxIDBuilding() {
            object[] results = this.Invoke("GetMaxIDBuilding", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIDBuildingAsync() {
            this.GetMaxIDBuildingAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxIDBuildingAsync(object userState) {
            if ((this.GetMaxIDBuildingOperationCompleted == null)) {
                this.GetMaxIDBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIDBuildingOperationCompleted);
            }
            this.InvokeAsync("GetMaxIDBuilding", new object[0], this.GetMaxIDBuildingOperationCompleted, userState);
        }
        
        private void OnGetMaxIDBuildingOperationCompleted(object arg) {
            if ((this.GetMaxIDBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIDBuildingCompleted(this, new GetMaxIDBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllCity() {
            object[] results = this.Invoke("LoadAllCity", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllCityAsync() {
            this.LoadAllCityAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllCityAsync(object userState) {
            if ((this.LoadAllCityOperationCompleted == null)) {
                this.LoadAllCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllCityOperationCompleted);
            }
            this.InvokeAsync("LoadAllCity", new object[0], this.LoadAllCityOperationCompleted, userState);
        }
        
        private void OnLoadAllCityOperationCompleted(object arg) {
            if ((this.LoadAllCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllCityCompleted(this, new LoadAllCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityByCityID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCityByCityID(int CityID) {
            object[] results = this.Invoke("GetCityByCityID", new object[] {
                        CityID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityByCityIDAsync(int CityID) {
            this.GetCityByCityIDAsync(CityID, null);
        }
        
        /// <remarks/>
        public void GetCityByCityIDAsync(int CityID, object userState) {
            if ((this.GetCityByCityIDOperationCompleted == null)) {
                this.GetCityByCityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityByCityIDOperationCompleted);
            }
            this.InvokeAsync("GetCityByCityID", new object[] {
                        CityID}, this.GetCityByCityIDOperationCompleted, userState);
        }
        
        private void OnGetCityByCityIDOperationCompleted(object arg) {
            if ((this.GetCityByCityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityByCityIDCompleted(this, new GetCityByCityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicationCheckCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicationCheckCity(string CityName) {
            object[] results = this.Invoke("DuplicationCheckCity", new object[] {
                        CityName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicationCheckCityAsync(string CityName) {
            this.DuplicationCheckCityAsync(CityName, null);
        }
        
        /// <remarks/>
        public void DuplicationCheckCityAsync(string CityName, object userState) {
            if ((this.DuplicationCheckCityOperationCompleted == null)) {
                this.DuplicationCheckCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicationCheckCityOperationCompleted);
            }
            this.InvokeAsync("DuplicationCheckCity", new object[] {
                        CityName}, this.DuplicationCheckCityOperationCompleted, userState);
        }
        
        private void OnDuplicationCheckCityOperationCompleted(object arg) {
            if ((this.DuplicationCheckCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicationCheckCityCompleted(this, new DuplicationCheckCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCity(BE_City NewBEObj) {
            object[] results = this.Invoke("AddCity", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCityAsync(BE_City NewBEObj) {
            this.AddCityAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddCityAsync(BE_City NewBEObj, object userState) {
            if ((this.AddCityOperationCompleted == null)) {
                this.AddCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCityOperationCompleted);
            }
            this.InvokeAsync("AddCity", new object[] {
                        NewBEObj}, this.AddCityOperationCompleted, userState);
        }
        
        private void OnAddCityOperationCompleted(object arg) {
            if ((this.AddCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCityCompleted(this, new AddCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCity(BE_City NewBEObj) {
            object[] results = this.Invoke("UpdateCity", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCityAsync(BE_City NewBEObj) {
            this.UpdateCityAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateCityAsync(BE_City NewBEObj, object userState) {
            if ((this.UpdateCityOperationCompleted == null)) {
                this.UpdateCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCityOperationCompleted);
            }
            this.InvokeAsync("UpdateCity", new object[] {
                        NewBEObj}, this.UpdateCityOperationCompleted, userState);
        }
        
        private void OnUpdateCityOperationCompleted(object arg) {
            if ((this.UpdateCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCityCompleted(this, new UpdateCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxIDCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxIDCity() {
            object[] results = this.Invoke("GetMaxIDCity", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIDCityAsync() {
            this.GetMaxIDCityAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxIDCityAsync(object userState) {
            if ((this.GetMaxIDCityOperationCompleted == null)) {
                this.GetMaxIDCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIDCityOperationCompleted);
            }
            this.InvokeAsync("GetMaxIDCity", new object[0], this.GetMaxIDCityOperationCompleted, userState);
        }
        
        private void OnGetMaxIDCityOperationCompleted(object arg) {
            if ((this.GetMaxIDCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIDCityCompleted(this, new GetMaxIDCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateUser(string UserName) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string UserName) {
            this.ValidateUserAsync(UserName, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string UserName, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        UserName}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginAuth(string UserName, string Password) {
            object[] results = this.Invoke("LoginAuth", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAuthAsync(string UserName, string Password) {
            this.LoginAuthAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginAuthAsync(string UserName, string Password, object userState) {
            if ((this.LoginAuthOperationCompleted == null)) {
                this.LoginAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginAuthOperationCompleted);
            }
            this.InvokeAsync("LoginAuth", new object[] {
                        UserName,
                        Password}, this.LoginAuthOperationCompleted, userState);
        }
        
        private void OnLoginAuthOperationCompleted(object arg) {
            if ((this.LoginAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginAuthCompleted(this, new LoginAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadUserRights(string UserName) {
            object[] results = this.Invoke("LoadUserRights", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUserRightsAsync(string UserName) {
            this.LoadUserRightsAsync(UserName, null);
        }
        
        /// <remarks/>
        public void LoadUserRightsAsync(string UserName, object userState) {
            if ((this.LoadUserRightsOperationCompleted == null)) {
                this.LoadUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUserRightsOperationCompleted);
            }
            this.InvokeAsync("LoadUserRights", new object[] {
                        UserName}, this.LoadUserRightsOperationCompleted, userState);
        }
        
        private void OnLoadUserRightsOperationCompleted(object arg) {
            if ((this.LoadUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUserRightsCompleted(this, new LoadUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserMenuByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserMenuByUserID(int UserID) {
            object[] results = this.Invoke("GetUserMenuByUserID", new object[] {
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMenuByUserIDAsync(int UserID) {
            this.GetUserMenuByUserIDAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserMenuByUserIDAsync(int UserID, object userState) {
            if ((this.GetUserMenuByUserIDOperationCompleted == null)) {
                this.GetUserMenuByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMenuByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserMenuByUserID", new object[] {
                        UserID}, this.GetUserMenuByUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserMenuByUserIDOperationCompleted(object arg) {
            if ((this.GetUserMenuByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMenuByUserIDCompleted(this, new GetUserMenuByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidatePassword(string OldPassword, int UserID) {
            object[] results = this.Invoke("ValidatePassword", new object[] {
                        OldPassword,
                        UserID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePasswordAsync(string OldPassword, int UserID) {
            this.ValidatePasswordAsync(OldPassword, UserID, null);
        }
        
        /// <remarks/>
        public void ValidatePasswordAsync(string OldPassword, int UserID, object userState) {
            if ((this.ValidatePasswordOperationCompleted == null)) {
                this.ValidatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePasswordOperationCompleted);
            }
            this.InvokeAsync("ValidatePassword", new object[] {
                        OldPassword,
                        UserID}, this.ValidatePasswordOperationCompleted, userState);
        }
        
        private void OnValidatePasswordOperationCompleted(object arg) {
            if ((this.ValidatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePasswordCompleted(this, new ValidatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(string NewPassword, int userID) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        NewPassword,
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string NewPassword, int userID) {
            this.ChangePasswordAsync(NewPassword, userID, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string NewPassword, int userID, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        NewPassword,
                        userID}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserDetail(int UserID) {
            object[] results = this.Invoke("GetUserDetail", new object[] {
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(int UserID) {
            this.GetUserDetailAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(int UserID, object userState) {
            if ((this.GetUserDetailOperationCompleted == null)) {
                this.GetUserDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserDetail", new object[] {
                        UserID}, this.GetUserDetailOperationCompleted, userState);
        }
        
        private void OnGetUserDetailOperationCompleted(object arg) {
            if ((this.GetUserDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailCompleted(this, new GetUserDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRightsDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRightsDetails(int UserID) {
            object[] results = this.Invoke("GetUserRightsDetails", new object[] {
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRightsDetailsAsync(int UserID) {
            this.GetUserRightsDetailsAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserRightsDetailsAsync(int UserID, object userState) {
            if ((this.GetUserRightsDetailsOperationCompleted == null)) {
                this.GetUserRightsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRightsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserRightsDetails", new object[] {
                        UserID}, this.GetUserRightsDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserRightsDetailsOperationCompleted(object arg) {
            if ((this.GetUserRightsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRightsDetailsCompleted(this, new GetUserRightsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllUsers() {
            object[] results = this.Invoke("LoadAllUsers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllUsersAsync() {
            this.LoadAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllUsersAsync(object userState) {
            if ((this.LoadAllUsersOperationCompleted == null)) {
                this.LoadAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllUsersOperationCompleted);
            }
            this.InvokeAsync("LoadAllUsers", new object[0], this.LoadAllUsersOperationCompleted, userState);
        }
        
        private void OnLoadAllUsersOperationCompleted(object arg) {
            if ((this.LoadAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllUsersCompleted(this, new LoadAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormName() {
            object[] results = this.Invoke("GetFormName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormNameAsync() {
            this.GetFormNameAsync(null);
        }
        
        /// <remarks/>
        public void GetFormNameAsync(object userState) {
            if ((this.GetFormNameOperationCompleted == null)) {
                this.GetFormNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormNameOperationCompleted);
            }
            this.InvokeAsync("GetFormName", new object[0], this.GetFormNameOperationCompleted, userState);
        }
        
        private void OnGetFormNameOperationCompleted(object arg) {
            if ((this.GetFormNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormNameCompleted(this, new GetFormNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicateUser(string Title) {
            object[] results = this.Invoke("DuplicateUser", new object[] {
                        Title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateUserAsync(string Title) {
            this.DuplicateUserAsync(Title, null);
        }
        
        /// <remarks/>
        public void DuplicateUserAsync(string Title, object userState) {
            if ((this.DuplicateUserOperationCompleted == null)) {
                this.DuplicateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateUserOperationCompleted);
            }
            this.InvokeAsync("DuplicateUser", new object[] {
                        Title}, this.DuplicateUserOperationCompleted, userState);
        }
        
        private void OnDuplicateUserOperationCompleted(object arg) {
            if ((this.DuplicateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateUserCompleted(this, new DuplicateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserRights(BE_UserManagement NewBEObj) {
            object[] results = this.Invoke("AddUserRights", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserRightsAsync(BE_UserManagement NewBEObj) {
            this.AddUserRightsAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddUserRightsAsync(BE_UserManagement NewBEObj, object userState) {
            if ((this.AddUserRightsOperationCompleted == null)) {
                this.AddUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserRightsOperationCompleted);
            }
            this.InvokeAsync("AddUserRights", new object[] {
                        NewBEObj}, this.AddUserRightsOperationCompleted, userState);
        }
        
        private void OnAddUserRightsOperationCompleted(object arg) {
            if ((this.AddUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserRightsCompleted(this, new AddUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxUserID() {
            object[] results = this.Invoke("GetMaxUserID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxUserIDAsync() {
            this.GetMaxUserIDAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxUserIDAsync(object userState) {
            if ((this.GetMaxUserIDOperationCompleted == null)) {
                this.GetMaxUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxUserIDOperationCompleted);
            }
            this.InvokeAsync("GetMaxUserID", new object[0], this.GetMaxUserIDOperationCompleted, userState);
        }
        
        private void OnGetMaxUserIDOperationCompleted(object arg) {
            if ((this.GetMaxUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxUserIDCompleted(this, new GetMaxUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserRights(BE_UserManagement NewBEObj) {
            object[] results = this.Invoke("UpdateUserRights", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserRightsAsync(BE_UserManagement NewBEObj) {
            this.UpdateUserRightsAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateUserRightsAsync(BE_UserManagement NewBEObj, object userState) {
            if ((this.UpdateUserRightsOperationCompleted == null)) {
                this.UpdateUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserRightsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserRights", new object[] {
                        NewBEObj}, this.UpdateUserRightsOperationCompleted, userState);
        }
        
        private void OnUpdateUserRightsOperationCompleted(object arg) {
            if ((this.UpdateUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserRightsCompleted(this, new UpdateUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAllStudents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadAllStudents() {
            object[] results = this.Invoke("LoadAllStudents", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllStudentsAsync() {
            this.LoadAllStudentsAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllStudentsAsync(object userState) {
            if ((this.LoadAllStudentsOperationCompleted == null)) {
                this.LoadAllStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllStudentsOperationCompleted);
            }
            this.InvokeAsync("LoadAllStudents", new object[0], this.LoadAllStudentsOperationCompleted, userState);
        }
        
        private void OnLoadAllStudentsOperationCompleted(object arg) {
            if ((this.LoadAllStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllStudentsCompleted(this, new LoadAllStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicationStudentRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DuplicationStudentRecord(string RegistrationNo) {
            object[] results = this.Invoke("DuplicationStudentRecord", new object[] {
                        RegistrationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicationStudentRecordAsync(string RegistrationNo) {
            this.DuplicationStudentRecordAsync(RegistrationNo, null);
        }
        
        /// <remarks/>
        public void DuplicationStudentRecordAsync(string RegistrationNo, object userState) {
            if ((this.DuplicationStudentRecordOperationCompleted == null)) {
                this.DuplicationStudentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicationStudentRecordOperationCompleted);
            }
            this.InvokeAsync("DuplicationStudentRecord", new object[] {
                        RegistrationNo}, this.DuplicationStudentRecordOperationCompleted, userState);
        }
        
        private void OnDuplicationStudentRecordOperationCompleted(object arg) {
            if ((this.DuplicationStudentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicationStudentRecordCompleted(this, new DuplicationStudentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentByStudentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStudentByStudentID(int StudentID) {
            object[] results = this.Invoke("GetStudentByStudentID", new object[] {
                        StudentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentByStudentIDAsync(int StudentID) {
            this.GetStudentByStudentIDAsync(StudentID, null);
        }
        
        /// <remarks/>
        public void GetStudentByStudentIDAsync(int StudentID, object userState) {
            if ((this.GetStudentByStudentIDOperationCompleted == null)) {
                this.GetStudentByStudentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentByStudentIDOperationCompleted);
            }
            this.InvokeAsync("GetStudentByStudentID", new object[] {
                        StudentID}, this.GetStudentByStudentIDOperationCompleted, userState);
        }
        
        private void OnGetStudentByStudentIDOperationCompleted(object arg) {
            if ((this.GetStudentByStudentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentByStudentIDCompleted(this, new GetStudentByStudentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddStudent(BE_Student NewBEObj) {
            object[] results = this.Invoke("AddStudent", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentAsync(BE_Student NewBEObj) {
            this.AddStudentAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void AddStudentAsync(BE_Student NewBEObj, object userState) {
            if ((this.AddStudentOperationCompleted == null)) {
                this.AddStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentOperationCompleted);
            }
            this.InvokeAsync("AddStudent", new object[] {
                        NewBEObj}, this.AddStudentOperationCompleted, userState);
        }
        
        private void OnAddStudentOperationCompleted(object arg) {
            if ((this.AddStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentCompleted(this, new AddStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStudent(BE_Student NewBEObj) {
            object[] results = this.Invoke("UpdateStudent", new object[] {
                        NewBEObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStudentAsync(BE_Student NewBEObj) {
            this.UpdateStudentAsync(NewBEObj, null);
        }
        
        /// <remarks/>
        public void UpdateStudentAsync(BE_Student NewBEObj, object userState) {
            if ((this.UpdateStudentOperationCompleted == null)) {
                this.UpdateStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStudentOperationCompleted);
            }
            this.InvokeAsync("UpdateStudent", new object[] {
                        NewBEObj}, this.UpdateStudentOperationCompleted, userState);
        }
        
        private void OnUpdateStudentOperationCompleted(object arg) {
            if ((this.UpdateStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStudentCompleted(this, new UpdateStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_Student {
        
        private int studentIDField;
        
        private string studentNameField;
        
        private string fatherNameField;
        
        private string registrationNoField;
        
        private string addressField;
        
        private System.Data.DataTable dtStudentField;
        
        /// <remarks/>
        public int StudentID {
            get {
                return this.studentIDField;
            }
            set {
                this.studentIDField = value;
            }
        }
        
        /// <remarks/>
        public string StudentName {
            get {
                return this.studentNameField;
            }
            set {
                this.studentNameField = value;
            }
        }
        
        /// <remarks/>
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationNo {
            get {
                return this.registrationNoField;
            }
            set {
                this.registrationNoField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtStudent {
            get {
                return this.dtStudentField;
            }
            set {
                this.dtStudentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_UserManagement {
        
        private int userIDField;
        
        private string userNameField;
        
        private string passwordField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtUserManagementField;
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUserManagement {
            get {
                return this.dtUserManagementField;
            }
            set {
                this.dtUserManagementField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_City {
        
        private int cityIDField;
        
        private string cityNameField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtCityField;
        
        /// <remarks/>
        public int CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtCity {
            get {
                return this.dtCityField;
            }
            set {
                this.dtCityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_Building {
        
        private int buildingIDField;
        
        private string buildingNameField;
        
        private string addressField;
        
        private int cityIDField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtBuildingField;
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingName {
            get {
                return this.buildingNameField;
            }
            set {
                this.buildingNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public int CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtBuilding {
            get {
                return this.dtBuildingField;
            }
            set {
                this.dtBuildingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_Floor {
        
        private int floorIDField;
        
        private string floorNameField;
        
        private int buildingIDField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtFloorField;
        
        /// <remarks/>
        public int FloorID {
            get {
                return this.floorIDField;
            }
            set {
                this.floorIDField = value;
            }
        }
        
        /// <remarks/>
        public string FloorName {
            get {
                return this.floorNameField;
            }
            set {
                this.floorNameField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtFloor {
            get {
                return this.dtFloorField;
            }
            set {
                this.dtFloorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_Office {
        
        private int officeIDField;
        
        private int buildingIDField;
        
        private int floorIDField;
        
        private string officeNameField;
        
        private string ownerNameField;
        
        private string tenantNameField;
        
        private string officeRentField;
        
        private string officeAreaSquareField;
        
        private string electricityPerUnitField;
        
        private string genetorPerUnitField;
        
        private string maintenceField;
        
        private string waterField;
        
        private string otherField;
        
        private string descriptionField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtOfficeField;
        
        /// <remarks/>
        public int OfficeID {
            get {
                return this.officeIDField;
            }
            set {
                this.officeIDField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public int FloorID {
            get {
                return this.floorIDField;
            }
            set {
                this.floorIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeName {
            get {
                return this.officeNameField;
            }
            set {
                this.officeNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string tenantName {
            get {
                return this.tenantNameField;
            }
            set {
                this.tenantNameField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeRent {
            get {
                return this.officeRentField;
            }
            set {
                this.officeRentField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeAreaSquare {
            get {
                return this.officeAreaSquareField;
            }
            set {
                this.officeAreaSquareField = value;
            }
        }
        
        /// <remarks/>
        public string ElectricityPerUnit {
            get {
                return this.electricityPerUnitField;
            }
            set {
                this.electricityPerUnitField = value;
            }
        }
        
        /// <remarks/>
        public string GenetorPerUnit {
            get {
                return this.genetorPerUnitField;
            }
            set {
                this.genetorPerUnitField = value;
            }
        }
        
        /// <remarks/>
        public string Maintence {
            get {
                return this.maintenceField;
            }
            set {
                this.maintenceField = value;
            }
        }
        
        /// <remarks/>
        public string Water {
            get {
                return this.waterField;
            }
            set {
                this.waterField = value;
            }
        }
        
        /// <remarks/>
        public string Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtOffice {
            get {
                return this.dtOfficeField;
            }
            set {
                this.dtOfficeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BE_Billing {
        
        private int billingIDField;
        
        private string billNumberField;
        
        private int officeIDField;
        
        private System.DateTime billDateField;
        
        private string prevElectricityUnitField;
        
        private string currentElectricityUnitField;
        
        private string thisMonthElectricityUnitField;
        
        private string prevGeneratorUnitField;
        
        private string currentGeneratorUnitField;
        
        private string thisMonthGeneratorUnitField;
        
        private string electricityBillField;
        
        private string genetorBillField;
        
        private string billWithOutTaxField;
        
        private string taxField;
        
        private string totalBillWithTaxField;
        
        private string discountField;
        
        private string recievedAmountField;
        
        private string arearsField;
        
        private int created_IdField;
        
        private System.DateTime created_AtField;
        
        private System.DateTime modify_AtField;
        
        private int modify_IDField;
        
        private bool statusField;
        
        private System.Data.DataTable dtBillingField;
        
        /// <remarks/>
        public int BillingID {
            get {
                return this.billingIDField;
            }
            set {
                this.billingIDField = value;
            }
        }
        
        /// <remarks/>
        public string BillNumber {
            get {
                return this.billNumberField;
            }
            set {
                this.billNumberField = value;
            }
        }
        
        /// <remarks/>
        public int OfficeID {
            get {
                return this.officeIDField;
            }
            set {
                this.officeIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BillDate {
            get {
                return this.billDateField;
            }
            set {
                this.billDateField = value;
            }
        }
        
        /// <remarks/>
        public string PrevElectricityUnit {
            get {
                return this.prevElectricityUnitField;
            }
            set {
                this.prevElectricityUnitField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentElectricityUnit {
            get {
                return this.currentElectricityUnitField;
            }
            set {
                this.currentElectricityUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ThisMonthElectricityUnit {
            get {
                return this.thisMonthElectricityUnitField;
            }
            set {
                this.thisMonthElectricityUnitField = value;
            }
        }
        
        /// <remarks/>
        public string PrevGeneratorUnit {
            get {
                return this.prevGeneratorUnitField;
            }
            set {
                this.prevGeneratorUnitField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentGeneratorUnit {
            get {
                return this.currentGeneratorUnitField;
            }
            set {
                this.currentGeneratorUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ThisMonthGeneratorUnit {
            get {
                return this.thisMonthGeneratorUnitField;
            }
            set {
                this.thisMonthGeneratorUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ElectricityBill {
            get {
                return this.electricityBillField;
            }
            set {
                this.electricityBillField = value;
            }
        }
        
        /// <remarks/>
        public string GenetorBill {
            get {
                return this.genetorBillField;
            }
            set {
                this.genetorBillField = value;
            }
        }
        
        /// <remarks/>
        public string BillWithOutTax {
            get {
                return this.billWithOutTaxField;
            }
            set {
                this.billWithOutTaxField = value;
            }
        }
        
        /// <remarks/>
        public string Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public string TotalBillWithTax {
            get {
                return this.totalBillWithTaxField;
            }
            set {
                this.totalBillWithTaxField = value;
            }
        }
        
        /// <remarks/>
        public string Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public string RecievedAmount {
            get {
                return this.recievedAmountField;
            }
            set {
                this.recievedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Arears {
            get {
                return this.arearsField;
            }
            set {
                this.arearsField = value;
            }
        }
        
        /// <remarks/>
        public int Created_Id {
            get {
                return this.created_IdField;
            }
            set {
                this.created_IdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created_At {
            get {
                return this.created_AtField;
            }
            set {
                this.created_AtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modify_At {
            get {
                return this.modify_AtField;
            }
            set {
                this.modify_AtField = value;
            }
        }
        
        /// <remarks/>
        public int Modify_ID {
            get {
                return this.modify_IDField;
            }
            set {
                this.modify_IDField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtBilling {
            get {
                return this.dtBillingField;
            }
            set {
                this.dtBillingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllBillgSearchOnClickButtonCompletedEventHandler(object sender, LoadAllBillgSearchOnClickButtonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllBillgSearchOnClickButtonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllBillgSearchOnClickButtonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBillingByIDCompletedEventHandler(object sender, GetBillingByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxBillIDCompletedEventHandler(object sender, GetMaxBillIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxBillIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxBillIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadofficeDetailsByIDCompletedEventHandler(object sender, LoadofficeDetailsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadofficeDetailsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadofficeDetailsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadOfficesForBillingCompletedEventHandler(object sender, LoadOfficesForBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadOfficesForBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadOfficesForBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddBillingCompletedEventHandler(object sender, AddBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateBillingCompletedEventHandler(object sender, UpdateBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllOfficeCompletedEventHandler(object sender, LoadAllOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOfficeByIDCompletedEventHandler(object sender, GetOfficeByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfficeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfficeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicationCheckOfficeNameCompletedEventHandler(object sender, DuplicationCheckOfficeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicationCheckOfficeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicationCheckOfficeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxOfficeIDCompletedEventHandler(object sender, GetMaxOfficeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxOfficeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxOfficeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddOfficeCompletedEventHandler(object sender, AddOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateOfficeCompletedEventHandler(object sender, UpdateOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadfloorByBuildingIDCompletedEventHandler(object sender, LoadfloorByBuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadfloorByBuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadfloorByBuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllBuildingforOfficeCompletedEventHandler(object sender, LoadAllBuildingforOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllBuildingforOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllBuildingforOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllBuildingComboCompletedEventHandler(object sender, LoadAllBuildingComboCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllBuildingComboCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllBuildingComboCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadBuildingfromOfficesEditCompletedEventHandler(object sender, LoadBuildingfromOfficesEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBuildingfromOfficesEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBuildingfromOfficesEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadfloorByOfficeIDinEditCompletedEventHandler(object sender, LoadfloorByOfficeIDinEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadfloorByOfficeIDinEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadfloorByOfficeIDinEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllFloorCompletedEventHandler(object sender, LoadAllFloorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllFloorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllFloorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllFloorComboCompletedEventHandler(object sender, LoadAllFloorComboCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllFloorComboCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllFloorComboCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFloorByIDCompletedEventHandler(object sender, GetFloorByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFloorByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFloorByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadBuildingIDByFloorIDCompletedEventHandler(object sender, LoadBuildingIDByFloorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBuildingIDByFloorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBuildingIDByFloorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicationCheckFloorNameCompletedEventHandler(object sender, DuplicationCheckFloorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicationCheckFloorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicationCheckFloorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxIDFloorCompletedEventHandler(object sender, GetMaxIDFloorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIDFloorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIDFloorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddFloorCompletedEventHandler(object sender, AddFloorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFloorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFloorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateFloorCompletedEventHandler(object sender, UpdateFloorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFloorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFloorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllBuildingCompletedEventHandler(object sender, LoadAllBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBuildingByIDCompletedEventHandler(object sender, GetBuildingByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBuildingByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBuildingByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadCityByBuildingIDCompletedEventHandler(object sender, LoadCityByBuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCityByBuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCityByBuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicationCheckBuildingNameCompletedEventHandler(object sender, DuplicationCheckBuildingNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicationCheckBuildingNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicationCheckBuildingNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddBuildingCompletedEventHandler(object sender, AddBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateBuildingCompletedEventHandler(object sender, UpdateBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxIDBuildingCompletedEventHandler(object sender, GetMaxIDBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIDBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIDBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllCityCompletedEventHandler(object sender, LoadAllCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCityByCityIDCompletedEventHandler(object sender, GetCityByCityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityByCityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityByCityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicationCheckCityCompletedEventHandler(object sender, DuplicationCheckCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicationCheckCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicationCheckCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddCityCompletedEventHandler(object sender, AddCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCityCompletedEventHandler(object sender, UpdateCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxIDCityCompletedEventHandler(object sender, GetMaxIDCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIDCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIDCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoginAuthCompletedEventHandler(object sender, LoginAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadUserRightsCompletedEventHandler(object sender, LoadUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserMenuByUserIDCompletedEventHandler(object sender, GetUserMenuByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMenuByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMenuByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidatePasswordCompletedEventHandler(object sender, ValidatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserDetailCompletedEventHandler(object sender, GetUserDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserRightsDetailsCompletedEventHandler(object sender, GetUserRightsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRightsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRightsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllUsersCompletedEventHandler(object sender, LoadAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFormNameCompletedEventHandler(object sender, GetFormNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicateUserCompletedEventHandler(object sender, DuplicateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUserRightsCompletedEventHandler(object sender, AddUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxUserIDCompletedEventHandler(object sender, GetMaxUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateUserRightsCompletedEventHandler(object sender, UpdateUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadAllStudentsCompletedEventHandler(object sender, LoadAllStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DuplicationStudentRecordCompletedEventHandler(object sender, DuplicationStudentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicationStudentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicationStudentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentByStudentIDCompletedEventHandler(object sender, GetStudentByStudentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentByStudentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentByStudentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddStudentCompletedEventHandler(object sender, AddStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateStudentCompletedEventHandler(object sender, UpdateStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591